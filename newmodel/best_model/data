{
    "policy_class": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gAWVMAAAAAAAAACMHnN0YWJsZV9iYXNlbGluZXMzLnNhYy5wb2xpY2llc5SMCVNBQ1BvbGljeZSTlC4=",
        "__module__": "stable_baselines3.sac.policies",
        "__doc__": "\n    Policy class (with both actor and critic) for SAC.\n\n    :param observation_space: Observation space\n    :param action_space: Action space\n    :param lr_schedule: Learning rate schedule (could be constant)\n    :param net_arch: The specification of the policy and value networks.\n    :param activation_fn: Activation function\n    :param use_sde: Whether to use State Dependent Exploration or not\n    :param log_std_init: Initial value for the log standard deviation\n    :param use_expln: Use ``expln()`` function instead of ``exp()`` when using gSDE to ensure\n        a positive standard deviation (cf paper). It allows to keep variance\n        above zero and prevent it from growing too fast. In practice, ``exp()`` is usually enough.\n    :param clip_mean: Clip the mean output when using gSDE to avoid numerical instability.\n    :param features_extractor_class: Features extractor to use.\n    :param features_extractor_kwargs: Keyword arguments\n        to pass to the features extractor.\n    :param normalize_images: Whether to normalize images or not,\n         dividing by 255.0 (True by default)\n    :param optimizer_class: The optimizer to use,\n        ``th.optim.Adam`` by default\n    :param optimizer_kwargs: Additional keyword arguments,\n        excluding the learning rate, to pass to the optimizer\n    :param n_critics: Number of critic networks to create.\n    :param share_features_extractor: Whether to share or not the features extractor\n        between the actor and the critic (this saves computation time)\n    ",
        "__init__": "<function SACPolicy.__init__ at 0x7f536b5c97e0>",
        "_build": "<function SACPolicy._build at 0x7f536b5c9870>",
        "_get_constructor_parameters": "<function SACPolicy._get_constructor_parameters at 0x7f536b5c9900>",
        "reset_noise": "<function SACPolicy.reset_noise at 0x7f536b5c9990>",
        "make_actor": "<function SACPolicy.make_actor at 0x7f536b5c9a20>",
        "make_critic": "<function SACPolicy.make_critic at 0x7f536b5c9ab0>",
        "forward": "<function SACPolicy.forward at 0x7f536b5c9b40>",
        "_predict": "<function SACPolicy._predict at 0x7f536b5c9bd0>",
        "set_training_mode": "<function SACPolicy.set_training_mode at 0x7f536b5c9c60>",
        "__abstractmethods__": "frozenset()",
        "_abc_impl": "<_abc._abc_data object at 0x7f536b5d1940>"
    },
    "verbose": 1,
    "policy_kwargs": {
        "use_sde": false
    },
    "observation_space": {
        ":type:": "<class 'gymnasium.spaces.box.Box'>",
        ":serialized:": "gAWVPQMAAAAAAACMFGd5bW5hc2l1bS5zcGFjZXMuYm94lIwDQm94lJOUKYGUfZQojAVkdHlwZZSMBW51bXB5lGgFk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKMDWJvdW5kZWRfYmVsb3eUjBJudW1weS5jb3JlLm51bWVyaWOUjAtfZnJvbWJ1ZmZlcpSTlCiWLQAAAAAAAAABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQGUaAeMAmIxlImIh5RSlChLA4wBfJROTk5K/////0r/////SwB0lGJLLYWUjAFDlHSUUpSMDWJvdW5kZWRfYWJvdmWUaBAoli0AAAAAAAAAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBlGgUSy2FlGgYdJRSlIwGX3NoYXBllEsthZSMA2xvd5RoECiWtAAAAAAAAAAAACDCAAAgwgAAIMIAACDCAAAgwgAAIMIAACDCAAAgwgAAIMIAACDCAAAgwgAAIMIAACDCAAAgwgAAIMIAACDCAAAgwgAAIMIAACDCAAAgwgAAIMIAACDCAAAgwgAAIMIAACDCAAAgwgAAIMIAACDCAAAgwgAAIMIAACDCAAAgwgAAIMIAACDCAAAgwgAAIMIAACDCAAAgwgAAIMIAACDCAAAgwgAAIMIAACDCAAAgwgAAIMKUaApLLYWUaBh0lFKUjARoaWdolGgQKJa0AAAAAAAAAAAAIEIAACBCAAAgQgAAIEIAACBCAAAgQgAAIEIAACBCAAAgQgAAIEIAACBCAAAgQgAAIEIAACBCAAAgQgAAIEIAACBCAAAgQgAAIEIAACBCAAAgQgAAIEIAACBCAAAgQgAAIEIAACBCAAAgQgAAIEIAACBCAAAgQgAAIEIAACBCAAAgQgAAIEIAACBCAAAgQgAAIEIAACBCAAAgQgAAIEIAACBCAAAgQgAAIEIAACBCAAAgQpRoCksthZRoGHSUUpSMCGxvd19yZXBylIwFLTQwLjCUjAloaWdoX3JlcHKUjAQ0MC4wlIwKX25wX3JhbmRvbZROdWIu",
        "dtype": "float32",
        "bounded_below": "[ True  True  True  True  True  True  True  True  True  True  True  True\n  True  True  True  True  True  True  True  True  True  True  True  True\n  True  True  True  True  True  True  True  True  True  True  True  True\n  True  True  True  True  True  True  True  True  True]",
        "bounded_above": "[ True  True  True  True  True  True  True  True  True  True  True  True\n  True  True  True  True  True  True  True  True  True  True  True  True\n  True  True  True  True  True  True  True  True  True  True  True  True\n  True  True  True  True  True  True  True  True  True]",
        "_shape": [
            45
        ],
        "low": "[-40. -40. -40. -40. -40. -40. -40. -40. -40. -40. -40. -40. -40. -40.\n -40. -40. -40. -40. -40. -40. -40. -40. -40. -40. -40. -40. -40. -40.\n -40. -40. -40. -40. -40. -40. -40. -40. -40. -40. -40. -40. -40. -40.\n -40. -40. -40.]",
        "high": "[40. 40. 40. 40. 40. 40. 40. 40. 40. 40. 40. 40. 40. 40. 40. 40. 40. 40.\n 40. 40. 40. 40. 40. 40. 40. 40. 40. 40. 40. 40. 40. 40. 40. 40. 40. 40.\n 40. 40. 40. 40. 40. 40. 40. 40. 40.]",
        "low_repr": "-40.0",
        "high_repr": "40.0",
        "_np_random": null
    },
    "action_space": {
        ":type:": "<class 'gymnasium.spaces.box.Box'>",
        ":serialized:": "gAWVXQIAAAAAAACMFGd5bW5hc2l1bS5zcGFjZXMuYm94lIwDQm94lJOUKYGUfZQojAVkdHlwZZSMBW51bXB5lGgFk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKMDWJvdW5kZWRfYmVsb3eUjBJudW1weS5jb3JlLm51bWVyaWOUjAtfZnJvbWJ1ZmZlcpSTlCiWBgAAAAAAAAABAQEBAQGUaAeMAmIxlImIh5RSlChLA4wBfJROTk5K/////0r/////SwB0lGJLBoWUjAFDlHSUUpSMDWJvdW5kZWRfYWJvdmWUaBAolgYAAAAAAAAAAQEBAQEBlGgUSwaFlGgYdJRSlIwGX3NoYXBllEsGhZSMA2xvd5RoECiWGAAAAAAAAAAAAIC/AACAvwAAgL8AAIC/AACAvwAAgL+UaApLBoWUaBh0lFKUjARoaWdolGgQKJYYAAAAAAAAAAAAgD8AAIA/AACAPwAAgD8AAIA/AACAP5RoCksGhZRoGHSUUpSMCGxvd19yZXBylIwELTEuMJSMCWhpZ2hfcmVwcpSMAzEuMJSMCl9ucF9yYW5kb22UjBRudW1weS5yYW5kb20uX3BpY2tsZZSMEF9fZ2VuZXJhdG9yX2N0b3KUk5SMBVBDRzY0lIWUUpR9lCiMDWJpdF9nZW5lcmF0b3KUjAVQQ0c2NJSMBXN0YXRllH2UKGg6ihBu8WvpXgwAGkIVzokRMgQqjANpbmOUihCBMMzb5SPM8CH3Rm5TGu4rdYwKaGFzX3VpbnQzMpRLAIwIdWludGVnZXKUSwB1YnViLg==",
        "dtype": "float32",
        "bounded_below": "[ True  True  True  True  True  True]",
        "bounded_above": "[ True  True  True  True  True  True]",
        "_shape": [
            6
        ],
        "low": "[-1. -1. -1. -1. -1. -1.]",
        "high": "[1. 1. 1. 1. 1. 1.]",
        "low_repr": "-1.0",
        "high_repr": "1.0",
        "_np_random": "Generator(PCG64)"
    },
    "n_envs": 4,
    "num_timesteps": 9200000,
    "_total_timesteps": 10000000.0,
    "_num_timesteps_at_start": 0,
    "seed": null,
    "action_noise": {
        ":type:": "<class 'stable_baselines3.common.noise.NormalActionNoise'>",
        ":serialized:": "gAWVOgEAAAAAAACMHnN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi5ub2lzZZSMEU5vcm1hbEFjdGlvbk5vaXNllJOUKYGUfZQojANfbXWUjBJudW1weS5jb3JlLm51bWVyaWOUjAtfZnJvbWJ1ZmZlcpSTlCiWMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUjAVudW1weZSMBWR0eXBllJOUjAJmOJSJiIeUUpQoSwOMATyUTk5OSv////9K/////0sAdJRiSwaFlIwBQ5R0lFKUjAZfc2lnbWGUaAgoljAAAAAAAAAAmpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/lGgPSwaFlGgTdJRSlHViLg==",
        "_mu": "[0. 0. 0. 0. 0. 0.]",
        "_sigma": "[0.1 0.1 0.1 0.1 0.1 0.1]"
    },
    "start_time": 1677820241976577387,
    "learning_rate": 0.0003,
    "tensorboard_log": "./tensorboard/20230303-12:10AM_SAC_M1000_0.03/",
    "lr_schedule": {
        ":type:": "<class 'function'>",
        ":serialized:": "gAWV8wIAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwFLAUsTQwSIAFMAlE6FlCmMAV+UhZSMYC9ob21lL2JhaGEvYW5hY29uZGEzL2VudnMvZ3ltLWVudi9saWIvcHl0aG9uMy4xMC9zaXRlLXBhY2thZ2VzL3N0YWJsZV9iYXNlbGluZXMzL2NvbW1vbi91dGlscy5weZSMBGZ1bmOUS4JDAgQBlIwDdmFslIWUKXSUUpR9lCiMC19fcGFja2FnZV9flIwYc3RhYmxlX2Jhc2VsaW5lczMuY29tbW9ulIwIX19uYW1lX1+UjB5zdGFibGVfYmFzZWxpbmVzMy5jb21tb24udXRpbHOUjAhfX2ZpbGVfX5SMYC9ob21lL2JhaGEvYW5hY29uZGEzL2VudnMvZ3ltLWVudi9saWIvcHl0aG9uMy4xMC9zaXRlLXBhY2thZ2VzL3N0YWJsZV9iYXNlbGluZXMzL2NvbW1vbi91dGlscy5weZR1Tk5oAIwQX21ha2VfZW1wdHlfY2VsbJSTlClSlIWUdJRSlIwcY2xvdWRwaWNrbGUuY2xvdWRwaWNrbGVfZmFzdJSMEl9mdW5jdGlvbl9zZXRzdGF0ZZSTlGgffZR9lChoFmgNjAxfX3F1YWxuYW1lX1+UjBljb25zdGFudF9mbi48bG9jYWxzPi5mdW5jlIwPX19hbm5vdGF0aW9uc19flH2UjA5fX2t3ZGVmYXVsdHNfX5ROjAxfX2RlZmF1bHRzX1+UTowKX19tb2R1bGVfX5RoF4wHX19kb2NfX5ROjAtfX2Nsb3N1cmVfX5RoAIwKX21ha2VfY2VsbJSTlEc/M6kqMFUyYYWUUpSFlIwXX2Nsb3VkcGlja2xlX3N1Ym1vZHVsZXOUXZSMC19fZ2xvYmFsc19flH2UdYaUhlIwLg=="
    },
    "_last_obs": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVRQMAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJbQAgAAAAAAAKUiRr7xrpNA1uiwP57DAz5gGcM8tYR6PWQO7T3sB48/lXcGvxmu3b9gCma/YtYPwLzmhDgRD580P4o+OCcXEb4cmphA//C1P+x8Fz7zMuI9vIXWvfUtVD1gZR0+NQUhPW7KnTybbLE9C+Qpvnv/cj1DGqM/y7QjPtrfuL167go+RkMhPk0dZ722kiA+yGQvPxsg0j//YoQ/l+oZQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOj0Rb7z2JNApH2wPy7uGT6gdtq7hGrsPMPXOz08IYM/R8kNvyrlb0ClK5/AhiWrwO2ShTiHfLU0A+09OFvWEL6bxZhA0wa2P6kKFz4VReM99UbVvTV6VD3xlB0+6CUxPUrhOLt/7PA9yzAIvnv/cj1DGqM/y7QjPrkHub1w4Qo+E0MhPt+eXDwyyH8+erY2P2itdcCxgqNAny+wQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKytRb49AJRAk1ywP1L7QD6QK+08sNZUPEpTOT1jMnA/mnzXPaQIyUD/XMBAZg01wPg3hjiHfLU0lUc9OI6VEL4Z8ZhApxy2P2eYFj47V+Q9TQjUvXdgVD2FGx4+cQI4Pa+LKb1XDKk9I6PuvXv/cj1DGqM/y7QjPpAvub1g1Ao+4kIhPsWwZjxFBKw++dlfPWLty8BcBrzAlSE/QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApiRL4kKpRA52GwP4VwMT63sSU8iwXYvEu9Nz+/44c/F0+XvY0KKMAUl0TAN8fQwH27hjh24Ks06e08OMFUEL6XHJlAezK2PyQmFj5kaeU9w8nSvSE1UD1fTh4+gxI6PQlT2rwts9A9YMicvXv/cj1DGqM/y7QjPmBXub1Lxwo+tkIhPlSNKL8dtFk+V1xvPtI/IkCJQ01ATNHVQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJSMBW51bXB5lIwFZHR5cGWUk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGJLBEsthpSMAUOUdJRSlC4="
    },
    "_last_episode_starts": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVdwAAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJYEAAAAAAAAAAEBAQGUjAVudW1weZSMBWR0eXBllJOUjAJiMZSJiIeUUpQoSwOMAXyUTk5OSv////9K/////0sAdJRiSwSFlIwBQ5R0lFKULg=="
    },
    "_last_original_obs": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVRQMAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJbQAgAAAAAAANjaQ759/ZJASaSyP6G2Ej4YfZS7NrQ0PN/yDr+0Ao8/qq9Fv5Ncp0DezGRA6yGcQApHhThMMJs09Fk+OFoaEr4i7JdAsJm1P/VFGT6J6t09DoLbvfkBRz211B0+nlm9PHjq0TtbMuc9lRjyvXv/cj1DGqM/y7QjPhRAuL1oIgs+OUQhPtciHj93vCA+3ZxuP5M9qsC3GlzAyheXwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEq4Rb5PKJNAlkOyPwoW8D2Qc1k7AP0sPDZEm74mQH4/bWMuv6Yui8A5bqE/O/KBvTGihDhMMJs0LwI/OI3ZEb6hF5hAhK+1P7PTGD6f/N49y0LavfN6Tz1B6h0+hfvaPLgiAz0CMdg9a+LvvXv/cj1DGqM/y7QjPhFouL11FQs+90MhPiWkuT696I8+n1BXPwVNiECLC5C/FT1iPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPbOR773U5NAocGxPy1NxD0P+4I8JfoBPa43Br9mk5A/4ahivyMoaMAsSf8/PlZlQJpOhDhXXrw0hxw/OMGYEb4fQ5hAWMW1P3BhGD63DuA9qAPZvdXYWD0K5R0+2nYAPWfrWD3zT789XQANvnv/cj1DGqM/y7QjPgaQuL19CAs+uUMhPqVnFT/kNhQ+CsuFP6JjYkAc6O2/AkJbwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOHYRr7egJNAvzyxP1O5Dj6tA+o8jW2ZPeOx2T5BdJc/G9ssv2u34UCkgihAvXbfQLzmhDiXUb80aok+OPRXEb6ebphAK9u1Py7vFz7TIOE9osTXvbUDVj36tx0+l80TPbZdEzzon6Y9GJk4vnv/cj1DGqM/y7QjPvS3uL1++wo+fkMhPvRRu74dYLo9TshVP0ua5MDs0h/AomzawAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJSMBW51bXB5lIwFZHR5cGWUk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGJLBEsthpSMAUOUdJRSlC4="
    },
    "_episode_num": 18360,
    "use_sde": false,
    "sde_sample_freq": -1,
    "_current_progress_remaining": 0.08000039999999997,
    "ep_info_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "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"
    },
    "ep_success_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "gAWVIAAAAAAAAACMC2NvbGxlY3Rpb25zlIwFZGVxdWWUk5QpS2SGlFKULg=="
    },
    "_n_updates": 574993,
    "buffer_size": 1000000,
    "batch_size": 1024,
    "learning_starts": 100,
    "tau": 0.005,
    "gamma": 0.99,
    "gradient_steps": 1,
    "optimize_memory_usage": false,
    "replay_buffer_class": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gAWVNQAAAAAAAACMIHN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi5idWZmZXJzlIwMUmVwbGF5QnVmZmVylJOULg==",
        "__module__": "stable_baselines3.common.buffers",
        "__doc__": "\n    Replay buffer used in off-policy algorithms like SAC/TD3.\n\n    :param buffer_size: Max number of element in the buffer\n    :param observation_space: Observation space\n    :param action_space: Action space\n    :param device: PyTorch device\n    :param n_envs: Number of parallel environments\n    :param optimize_memory_usage: Enable a memory efficient variant\n        of the replay buffer which reduces by almost a factor two the memory used,\n        at a cost of more complexity.\n        See https://github.com/DLR-RM/stable-baselines3/issues/37#issuecomment-637501195\n        and https://github.com/DLR-RM/stable-baselines3/pull/28#issuecomment-637559274\n        Cannot be used in combination with handle_timeout_termination.\n    :param handle_timeout_termination: Handle timeout termination (due to timelimit)\n        separately and treat the task as infinite horizon task.\n        https://github.com/DLR-RM/stable-baselines3/issues/284\n    ",
        "__init__": "<function ReplayBuffer.__init__ at 0x7f536b5a80d0>",
        "add": "<function ReplayBuffer.add at 0x7f536b5a8160>",
        "sample": "<function ReplayBuffer.sample at 0x7f536b5a81f0>",
        "_get_samples": "<function ReplayBuffer._get_samples at 0x7f536b5a8280>",
        "__abstractmethods__": "frozenset()",
        "_abc_impl": "<_abc._abc_data object at 0x7f536b70b6c0>"
    },
    "replay_buffer_kwargs": {},
    "train_freq": {
        ":type:": "<class 'stable_baselines3.common.type_aliases.TrainFreq'>",
        ":serialized:": "gAWVYQAAAAAAAACMJXN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi50eXBlX2FsaWFzZXOUjAlUcmFpbkZyZXGUk5RLBGgAjBJUcmFpbkZyZXF1ZW5jeVVuaXSUk5SMBHN0ZXCUhZRSlIaUgZQu"
    },
    "use_sde_at_warmup": false,
    "target_entropy": {
        ":type:": "<class 'numpy.float32'>",
        ":serialized:": "gAWVZQAAAAAAAACMFW51bXB5LmNvcmUubXVsdGlhcnJheZSMBnNjYWxhcpSTlIwFbnVtcHmUjAVkdHlwZZSTlIwCZjSUiYiHlFKUKEsDjAE8lE5OTkr/////Sv////9LAHSUYkMEAADAwJSGlFKULg=="
    },
    "ent_coef": "auto",
    "target_update_interval": 1,
    "batch_norm_stats": [],
    "batch_norm_stats_target": []
}